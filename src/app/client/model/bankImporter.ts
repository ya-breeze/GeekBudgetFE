/**
 * Geek Budget - OpenAPI 3.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: ilya.korolev@outlook.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { BankImporterNoIDMappingsInner } from './bankImporterNoIDMappingsInner';
import { ImportResult } from './importResult';


export interface BankImporter { 
    id: string;
    name: string;
    description?: string;
    /**
     * ID of account which is used to store transactions from this bank importer
     */
    accountId: string;
    /**
     * Stores extra data about bank importer. For example could hold \"bank account number\" to be able to distinguish between different bank accounts, or it could hold token for bank API
     */
    extra?: string;
    /**
     * Type of bank importer. It\'s used to distinguish between different banks. For example, FIO bank or KB bank.
     */
    type?: BankImporter.TypeEnum;
    /**
     * Date of last successful import.
     */
    lastSuccessfulImport?: string;
    /**
     * List of last imports. It could be shown to user to explain what was imported recently
     */
    lastImports?: Array<ImportResult>;
    /**
     * List of mappings which are used to enrich transactions with additional tags
     */
    mappings?: Array<BankImporterNoIDMappingsInner>;
}
export namespace BankImporter {
    export type TypeEnum = 'fio' | 'kb' | 'revolut';
    export const TypeEnum = {
        Fio: 'fio' as TypeEnum,
        Kb: 'kb' as TypeEnum,
        Revolut: 'revolut' as TypeEnum
    };
}


